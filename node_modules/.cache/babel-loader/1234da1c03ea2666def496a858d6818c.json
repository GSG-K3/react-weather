{"ast":null,"code":"var _jsxFileName = \"/home/ruba/react-weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchLocation from \"./component/SearchLocation\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      log: null\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position, \"position\");\n        let latitude = position.coords.latitude;\n        let longitude = position.coords.longitude;\n        this.setState = {\n          lat: latitude,\n          log: longitude\n        };\n      });\n    }\n  }\n\n  searchF() {\n    if (this.state.text == \"\") {\n      // && document.getElementById('city').style.visibility != 'visible'){\n      let url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + this.state.lat + '&lon=' + this.state.lon + '139&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4';\n      console.log(url);\n    } else {\n      let url = 'https://api.openweathermap.org/data/2.5/weather?q=' + this.state.text + '&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4';\n      console.log(url);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \" WHAT'S THE WEATHER? \"), /*#__PURE__*/React.createElement(SearchLocation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ruba/react-weather/src/App.js"],"names":["React","Component","SearchLocation","App","state","lat","log","componentDidMount","navigator","geolocation","getCurrentPosition","position","console","latitude","coords","longitude","setState","searchF","text","url","lon","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,GAAG,EAAE,IADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACnDC,QAAAA,OAAO,CAACN,GAAR,CAAYK,QAAZ,EAAsB,UAAtB;AACA,YAAIE,QAAQ,GAAGF,QAAQ,CAACG,MAAT,CAAgBD,QAA/B;AACA,YAAIE,SAAS,GAAGJ,QAAQ,CAACG,MAAT,CAAgBC,SAAhC;AACA,aAAKC,QAAL,GAAe;AAACX,UAAAA,GAAG,EAACQ,QAAL;AAAcP,UAAAA,GAAG,EAACS;AAAlB,SAAf;AACD,OALD;AAOD;AAEF;;AAEDE,EAAAA,OAAO,GAAG;AACR,QAAG,KAAKb,KAAL,CAAWc,IAAX,IAAmB,EAAtB,EAAyB;AAAC;AAC3B,UAAIC,GAAG,GAAG,yDAAuD,KAAKf,KAAL,CAAWC,GAAlE,GAAsE,OAAtE,GAA8E,KAAKD,KAAL,CAAWgB,GAAzF,GAA6F,0DAAvG;AACAR,MAAAA,OAAO,CAACN,GAAR,CAAYa,GAAZ;AACI,KAHH,MAIE;AACF,UAAIA,GAAG,GAAG,uDAAuD,KAAKf,KAAL,CAAWc,IAAlE,GAAwE,uDAAlF;AACDN,MAAAA,OAAO,CAACN,GAAR,CAAYa,GAAZ;AACO;AAED;;AAEPE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AArCyB;;AAwC5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchLocation from \"./component/SearchLocation\";\nclass App extends Component {\n  state = {\n    lat: null,\n    log: null\n  };\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position, \"position\");\n        let latitude = position.coords.latitude;\n        let longitude = position.coords.longitude;\n        this.setState=({lat:latitude,log:longitude})\n      });\n      \n    }\n   \n  }\n\n  searchF (){\n    if(this.state.text == \"\"){// && document.getElementById('city').style.visibility != 'visible'){\n\t  let url = 'https://api.openweathermap.org/data/2.5/weather?lat='+this.state.lat+'&lon='+this.state.lon+'139&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4'\n   console.log(url)\n      }\n else {\n    let url = 'https://api.openweathermap.org/data/2.5/weather?q=' + this.state.text +'&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4'\n   console.log(url)\n         } \n         \n        }         \n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1> WHAT'S THE WEATHER? </h1>\n        <SearchLocation />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}