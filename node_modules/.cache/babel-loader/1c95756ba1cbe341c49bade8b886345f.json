{"ast":null,"code":"var _jsxFileName = \"/home/ruba/react-weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchLocation from \"./component/SearchLocation\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      log: null\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position, \"position\");\n        let latitude = position.coords.latitude;\n        let longitude = position.coords.longitude;\n        this.setState = {\n          lat: latitude,\n          log: longitude\n        };\n      });\n    }\n\n    const newsAPI = \"https://newsapi.org/v2/top-headlines?country=au&apiKey=626633f093cd40b7bda4ca1a94cc2b89\";\n  }\n\n  searchF() {\n    const url1 = 'https://api.openweathermap.org/data/2.5/weather?lat=' + this.state.lat + '&lon=' + this.state.lon + '139&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4';\n    const url2 = 'https://api.openweathermap.org/data/2.5/weather?q=' + this.state.text + '&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4';\n\n    if (this.state.text === \"\") {\n      // && document.getElementById('city').style.visibility != 'visible'){\n      fetch(url1).then(res => res.json()).then(data => {\n        console.log(data);\n      }).catch(err => console.log(err));\n    } else {\n      fetch(url2).then(res => res.json()).then(data => {\n        console.log(data);\n      }).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \" WHAT'S THE WEATHER? \"), /*#__PURE__*/React.createElement(SearchLocation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ruba/react-weather/src/App.js"],"names":["React","Component","SearchLocation","App","state","lat","log","componentDidMount","navigator","geolocation","getCurrentPosition","position","console","latitude","coords","longitude","setState","newsAPI","searchF","url1","lon","url2","text","fetch","then","res","json","data","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,GAAG,EAAE,IADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAElB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACnDC,QAAAA,OAAO,CAACN,GAAR,CAAYK,QAAZ,EAAsB,UAAtB;AACA,YAAIE,QAAQ,GAAGF,QAAQ,CAACG,MAAT,CAAgBD,QAA/B;AACA,YAAIE,SAAS,GAAGJ,QAAQ,CAACG,MAAT,CAAgBC,SAAhC;AACA,aAAKC,QAAL,GAAe;AAACX,UAAAA,GAAG,EAACQ,QAAL;AAAcP,UAAAA,GAAG,EAACS;AAAlB,SAAf;AACD,OALD;AAOD;;AACD,UAAME,OAAO,GAAG,yFAAhB;AAID;;AAEDC,EAAAA,OAAO,GAAG;AACR,UAAMC,IAAI,GAAE,yDAAuD,KAAKf,KAAL,CAAWC,GAAlE,GAAsE,OAAtE,GAA8E,KAAKD,KAAL,CAAWgB,GAAzF,GAA6F,0DAAzG;AACA,UAAMC,IAAI,GAAE,uDAAuD,KAAKjB,KAAL,CAAWkB,IAAlE,GAAwE,uDAApF;;AAEM,QAAG,KAAKlB,KAAL,CAAWkB,IAAX,KAAoB,EAAvB,EAA0B;AAAC;AAExBC,MAAAA,KAAK,CAACJ,IAAD,CAAL,CACAK,IADA,CACMC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADd,EAEAF,IAFA,CAEMG,IAAD,IAAU;AACdf,QAAAA,OAAO,CAACN,GAAR,CAAYqB,IAAZ;AACD,OAJA,EAMAC,KANA,CAMOC,GAAD,IAASjB,OAAO,CAACN,GAAR,CAAYuB,GAAZ,CANf;AAOM,KATT,MAUC;AAEKN,MAAAA,KAAK,CAACF,IAAD,CAAL,CACCG,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdf,QAAAA,OAAO,CAACN,GAAR,CAAYqB,IAAZ;AACD,OAJD,EAMCC,KAND,CAMQC,GAAD,IAASjB,OAAO,CAACN,GAAR,CAAYuB,GAAZ,CANhB;AAOO;AAGpB;;AAIDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA3DyB;;AA8D5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchLocation from \"./component/SearchLocation\";\nclass App extends Component {\n  state = {\n    lat: null,\n    log: null\n  };\n  componentDidMount() {\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position, \"position\");\n        let latitude = position.coords.latitude;\n        let longitude = position.coords.longitude;\n        this.setState=({lat:latitude,log:longitude})\n      });\n     \n    }\n    const newsAPI = \"https://newsapi.org/v2/top-headlines?country=au&apiKey=626633f093cd40b7bda4ca1a94cc2b89\"\n      \n    \n   \n  }\n\n  searchF (){\n    const url1 ='https://api.openweathermap.org/data/2.5/weather?lat='+this.state.lat+'&lon='+this.state.lon+'139&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4';\n    const url2 ='https://api.openweathermap.org/data/2.5/weather?q=' + this.state.text +'&units=metric&apikey=cf9fb4df751879d3f30929a3dd9050e4';\n\n          if(this.state.text === \"\"){// && document.getElementById('city').style.visibility != 'visible'){\n            \n             fetch(url1)\n            .then((res) => res.json())\n            .then((data) => {\n              console.log(data);\n            })\n\n            .catch((err) => console.log(err));\n                  }\n      else {\n            \n                fetch(url2)\n                .then((res) => res.json())\n                .then((data) => {\n                  console.log(data);\n                })\n          \n                .catch((err) => console.log(err));\n                      } \n                \n              \n  }   \n         \n             \n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1> WHAT'S THE WEATHER? </h1>\n        <SearchLocation />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}